#define LIGHTING_STYLE 3 // [0 1 2 3 4 5 6]

//Water Color

#define RW 0.3  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define GW 0.7  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define BW 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]


//torch Color

#define RT 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define GT 0.75  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define BT 0.55  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
//Ambient Color

#define MR 0.7  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define MG 0.75  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define MB 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]

#define NR 0.85  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define NG 0.9  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define NB 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]

#define KR 0.4  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define KG 0.55  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define KB 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
//sunColor

#define SMR 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SMG 0.35  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SMB 0.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]

#define SNR 0.925  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SNG 0.95  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SNB 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]

#define SKR 0.4  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SKG 0.525  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SKB 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
//ambient Color Strength

#define MS 0.4  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define NS 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define KS 0.8  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
//sun Color strength

#define SMS 0.85  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SNS 1.0  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
#define SKS 0.7  // [0.00 0.025 0.05 0.075 0.1 0.125 0.15 0.175 0.2 0.225 0.25 0.275 0.3 0.325 0.35 0.375 0.4 0.425 0.45 0.475 0.5 0.525 0.55 0.575 0.6 0.625 0.65 0.675 0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0]
 
float sunFactor = clamp(1.0 - pow(abs(-0.25 + sunAngle) * 4.0, 2.0 / (abs(-0.25 + sunAngle) * 4.0)), 0.0, 1.0);
							// 0-0.25-0.75 * 4 ,0-3, 3x3=9 / 3x3=9^0
														
#if (LIGHTING_STYLE == 0)				
// LUMA							
vec3 ambientColor = mix(vec3(0.7, 0.8, 1.0) * 0.6, vec3(0.54, 0.71, 1.0), sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.6, 0.73, 1.0) * 0.2 * time[5];
     ambientColor *= 1.0 - rainStrength;

     ambientColor += vec3(0.8, 0.9, 1.0) * 0.9 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.6, 0.73, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);

vec3 sunColor = mix(vec3(1.0, 0.5, 0.3) * 0.6, vec3(1.0, 0.9, 0.8), sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.6, 0.6, 1.0) * 0.1 * time[5];
     sunColor *= 1.0 - rainStrength;

vec3 torchColor = vec3(1.0, 0.6, 0.4);

vec3 waterColor = vec3(0.0, 0.7, 1.0);							
							
#elif (LIGHTING_STYLE == 1)
// 39
vec3 ambientColor = mix(vec3(0.75, 0.81, 1.0) * 0.55, vec3(0.8, 0.9, 1.0) * 1.0, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.4, 0.53, 1.0) * 0.8 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.9 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.6, 0.73, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.38, 0.0) * 0.9, vec3(1.0, 0.9, 0.8) * 1.0, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.4, 0.53, 1.0) * 0.7 * time[5]; //night
     sunColor *= 1.0 - rainStrength;


vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;

#elif (LIGHTING_STYLE == 2)
	//light white
vec3 ambientColor = mix(vec3(0.7, 0.76, 1.0) * 0.45, vec3vec3(0.99, 0.99, 1.0) * 0.66, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.4, 0.53, 1.0) * 0.8 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.9 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.6, 0.73, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.34, 0.0) * 0.88, vec3(0.9, 0.95, 1.0) * 0.88, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.4, 0.53, 1.0) * 0.7 * time[5]; //night
     sunColor *= 1.0 - rainStrength;

vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;

#elif (LIGHTING_STYLE == 3)

vec3 ambientColor = mix(vec3(0.88, 0.88, 1.0) * 0.38, vec3(0.95, 0.95, 1.0) * 0.65, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.89, 0.94, 1.0) * 0.22 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.53 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.95, 0.95, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.6, 0.4) * 0.62, vec3(1.0, 1.0, 1.0) * 0.55, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.92, 0.955, 1.0) * 0.2 * time[5]; //night
     sunColor *= 1.0 - rainStrength;
	//1,.45,.15
	
vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;

#elif (LIGHTING_STYLE == 4)

vec3 ambientColor = mix(vec3(0.88, 0.88, 1.0) * 0.38, vec3(0.95, 0.95, 1.0) * 0.61, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.89, 0.94, 1.0) * 0.22 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.53 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.95, 0.95, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.6, 0.4) * 0.62, vec3(1.0, 1.0, 1.0) * 0.52, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.92, 0.955, 1.0) * 0.2 * time[5]; //night
     sunColor *= 1.0 - rainStrength;
	//1,.45,.15
	
vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;

#elif (LIGHTING_STYLE == 5)

vec3 ambientColor = mix(vec3(0.77, 0.77, 1.0) * 0.33, vec3(0.95, 0.95, 1.0) * 0.5, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.89, 0.94, 1.0) * 0.22 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.53 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.95, 0.95, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.9, 0.6) * 0.58, vec3(1.0, 1.0, 0.85) * 0.7, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.92, 0.955, 1.0) * 0.2 * time[5]; //night
     sunColor *= 1.0 - rainStrength;

vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;
#elif (LIGHTING_STYLE == 6)

vec3 ambientColor = mix(vec3(0.75, 0.81, 1.0) * 0.55, vec3(0.8, 0.85, 1.0) * 0.05, sunFactor) * (1.0 - time[5]);
     ambientColor += vec3(0.4, 0.53, 1.0) * 0.8 * time[5]; //night
     ambientColor *= 1.0 - rainStrength;
							
     ambientColor += vec3(0.8, 0.9, 1.0) * 0.9 * rainStrength * (1.0 - time[5]);
     ambientColor += vec3(0.6, 0.73, 1.0) * 0.3 * rainStrength * time[5];
     ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
vec3 sunColor = mix(vec3(1.0, 0.38, 0.0) * 0.8, vec3(1.0, 0.95, 0.7) * 1.0, sunFactor) * (1.0 - time[6]);
     sunColor += vec3(0.4, 0.53, 1.0) * 0.7 * time[5]; //night
     sunColor *= 1.0 - rainStrength;


vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 torchColor += vec3(0.0, 0.0, 1.0) * BT;

vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 waterColor += vec3(0.0, 0.0, 1.0) * BW;
	 
#endif


//vec3 ambientColor = mix(vec3(0.76, 0.82, 1.0) * 0.6, vec3(0.8, 0.9, 1.0) * 1.0, sunFactor) * (1.0 - time[5]);
    // ambientColor += vec3(0.6, 0.73, 1.0) * 0.1 * time[5]; //night
    // ambientColor *= 1.0 - rainStrength;
							
     //ambientColor += vec3(0.8, 0.9, 1.0) * 0.9 * rainStrength * (1.0 - time[5]);
    // ambientColor += vec3(0.6, 0.73, 1.0) * 0.3 * rainStrength * time[5];
    // ambientColor = mix(ambientColor, normalize(ambientColor), nightVision * time[5]);
							//morning					//noon
//vec3 sunColor = mix(vec3(1.0, 0.38, 0.0) * 0.9, vec3(0.93, 0.96, 1.0) * 1.0, sunFactor) * (1.0 - time[6]);
     //sunColor += vec3(0.6, 0.73, 1.0) * 0.1 * time[5]; //night
     //sunColor *= 1.0 - rainStrength;

//vec3 torchColor = vec3(1.0, 0.0, 0.0) * RT;
	 //torchColor += vec3(0.0, 1.0, 0.0) * GT;
	 //torchColor += vec3(0.0, 0.0, 1.0) * BT;

//vec3 waterColor = vec3(1.0, 0.0, 0.0) * RW;
	 //waterColor += vec3(0.0, 1.0, 0.0) * GW;
	 //waterColor += vec3(0.0, 0.0, 1.0) * BW;

	 
	 
	 
	 
	 
	 
	 
	 